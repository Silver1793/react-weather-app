{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/WeatherInformation.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SearchBar","search","useState","city","setCity","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","WeatherInformation","props","name","temp","feels","humidity","desc","api","App","main","feels_like","weather","description","setWeather","fetch","then","res","status","json","Error","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAUeA,MARf,WACE,OACE,qBAAKC,UAAU,SAAf,SACE,oBAAIA,UAAU,cAAd,4BC8BSC,MAhCf,YAAgC,IAAXC,EAAU,EAAVA,OACnB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAaA,OACE,8BACE,uBAAML,UAAU,SAASM,SAXZ,SAACC,GAChBA,EAAEC,iBACGJ,GAILF,EAAOE,GACPC,EAAQ,KAJNI,MAAM,wBAQN,UACE,8BACE,uBACET,UAAU,aACVU,KAAK,OACLC,YAAY,aACZC,MAAOR,EACPS,SAAU,SAACN,GAAD,OArBH,SAACA,GAChBF,EAAQE,EAAEO,OAAOF,OAoBQC,CAASN,QAG9B,uBAAOP,UAAU,gBAAgBU,KAAK,SAASE,MAAM,iBCL9CG,MAtBf,SAA4BC,GAC1B,OACE,qBAAKhB,UAAU,gBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,SAA0BgB,EAAMC,OAChC,mBAAGjB,UAAU,WAAb,SACkB,KAAfgB,EAAME,KAAN,uBAAoCF,EAAME,KAA1C,KAAoD,KAEvD,mBAAGlB,UAAU,WAAb,SACmB,KAAhBgB,EAAMG,MAAN,sBAAoCH,EAAMG,MAA1C,KAAqD,KAExD,mBAAGnB,UAAU,WAAb,SACsB,KAAnBgB,EAAMI,SAAN,oBAAqCJ,EAAMI,UAAa,KAE3D,mBAAGpB,UAAU,WAAb,SACkB,KAAfgB,EAAMK,KAAN,uBAAoCL,EAAMK,MAAS,WCXxDC,EACC,mCADDA,EAEE,2CA0COC,MAxCf,WAEE,MAA8BpB,mBAAS,CACrCc,KAAM,GACNO,KAAM,CAAEN,KAAM,GAAIO,WAAY,GAAIL,SAAU,IAC5CM,QAAS,CAAC,CAAEC,YAAa,KACzBT,KAAM,KAJR,mBAAOQ,EAAP,KAAgBE,EAAhB,KAuBA,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAW1B,OApBA,SAACE,GACdyB,MAAM,GAAD,OAAIP,EAAJ,qBAAyBlB,EAAzB,+BAAoDkB,IACtDQ,MAAK,SAACC,GACL,GAAIA,EAAIC,QAAU,KAAOD,EAAIC,QAAU,IAAK,OAAOD,EAAIE,OAErD,MAAmB,MAAfF,EAAIC,OACA,IAAIE,MAAM,yCACP,IAAIA,MAAM,4CAGxBJ,MAAK,SAACC,GACLH,EAAWG,MAEZI,OAAM,SAACC,GACN3B,MAAM2B,SAOR,cAAC,EAAD,CACEnB,KAAMS,EAAQT,KACdC,KAAMQ,EAAQF,KAAKN,KACnBC,MAAOO,EAAQF,KAAKC,WACpBJ,KAAMK,EAAQA,QAAQ,GAAGC,YACzBP,SAAUM,EAAQF,KAAKJ,eChChBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.3247ae58.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <h1 className=\"header-text\">Weather App</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { useState } from \"react\";\n\nfunction SearchBar({ search }) {\n  const [city, setCity] = useState(\"\");\n  const onChange = (e) => {\n    setCity(e.target.value);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!city) {\n      alert(\"Please enter a city\");\n      return;\n    }\n    search(city);\n    setCity(\"\");\n  };\n  return (\n    <div>\n      <form className=\"search\" onSubmit={onSubmit}>\n        <div>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            placeholder=\"Enter City\"\n            value={city}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <input className=\"btn btn-block\" type=\"submit\" value=\"Search\" />\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React from \"react\";\n\nfunction WeatherInformation(props) {\n  return (\n    <div className=\"box-container\">\n      <div className=\"box\">\n        <h1 className=\"box-text\">{props.name}</h1>\n        <p className=\"box-text\">\n          {props.temp !== \"\" ? `Temperature: ${props.temp}C` : \"\"}\n        </p>\n        <p className=\"box-text\">\n          {props.feels !== \"\" ? `Feels Like: ${props.feels}C` : \"\"}\n        </p>\n        <p className=\"box-text\">\n          {props.humidity !== \"\" ? `Humidity: ${props.humidity}` : \"\"}\n        </p>\n        <p className=\"box-text\">\n          {props.desc !== \"\" ? `Description: ${props.desc}` : \"\"}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherInformation;\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport WeatherInformation from \"./components/WeatherInformation\";\nimport { useState } from \"react\";\n\nconst api = {\n  key: \"73fca821e9e4372c9dc299d6bff50724\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\nfunction App() {\n  //const [searchCity, setSearchCity] = useState(\"\");\n  const [weather, setWeather] = useState({\n    name: \"\",\n    main: { temp: \"\", feels_like: \"\", humidity: \"\" },\n    weather: [{ description: \"\" }],\n    temp: \"\",\n  });\n  const search = (city) => {\n    fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\n      .then((res) => {\n        if (res.status >= 200 && res.status <= 299) return res.json();\n        else {\n          if (res.status === 404)\n            throw new Error(\"Could not find city, please try again\");\n          else throw new Error(\"Sorry, an unforseen error has occured\");\n        }\n      })\n      .then((res) => {\n        setWeather(res);\n      })\n      .catch((error) => {\n        alert(error);\n      });\n  };\n  return (\n    <div>\n      <Header />\n      <SearchBar search={search} />\n      <WeatherInformation\n        name={weather.name}\n        temp={weather.main.temp}\n        feels={weather.main.feels_like}\n        desc={weather.weather[0].description}\n        humidity={weather.main.humidity}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n//https://api.openweathermap.org/data/2.5/weather?q=andover&units=metric&APPID=73fca821e9e4372c9dc299d6bff50724\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}